#!/bin/sh

set -eu

readonly BASE_DIR="${1}"

readonly class_name_and_template_re='([a-zA-Z]+)(<([a-zA-Z]+,\s*)*[a-zA-Z]+>)?'

enums_in_file() {
	local file="${1}"

	pcregrep -o2 '^\s*(public|private|)\s+enum\s+([a-zA-Z]+)\s' "${file}"
}

var_names_of_type() {
	local file="${1}"
	local type="${2}"

	pcregrep -o3 "^\s+((public|private|final|static)+\s+)?${type}\s+([a-zA-Z]+)\s*[;=]" "${file}"
}

enums_vars() {
	local file="${1}"

	enums_in_file "${file}" | while read type
	do
		var_names_of_type "${file}" "${type}"
	done
}

switches_on_enum_in_file() {
	local file="${1}"

	enums_vars "${file}" | while read var
	do
		grep -E "^\s*switch\s*[(]\s*${var}[)]" "${file}"
	done
}

anonymous_class_in_file() {
	local file="${1}"

	grep -E "new\s+[a-zA-Z]${class_name_and_template_re}\s*[(].*\s{" "${file}"
}

has_expert_construct() {
	local file="${1}"

	if [ "$(switches_on_enum_in_file "${file}" | wc -l)" -gt 0 ] ||
		[ "$(anonymous_class_in_file "${file}" | wc -l)" -gt 0 ]
	then
		return 0
	fi

	return 1
}

classes_in_file() {
	local file="${1}"

	pcregrep -o5 "^\s*((public|private)\s+)?(abstract\s+)?(class|enum)\s+${class_name_and_template_re}\s" "${file}"
}

generated() {
	local f

	for f in "${BASE_DIR}"/*.java
	do
		local main_class="$(classes_in_file "${f}" | head -n 1)"
		echo "${main_class}.class"

		if has_expert_construct "${f}"
		then
			echo "${main_class}\$1.class"
		fi

		classes_in_file "${f}" | tail -n +2 | sed "s|^|${main_class}\$|; s|\$|.class|"
	done
}

inputs="$(echo "${BASE_DIR}"/*.java | xargs -n 1 basename | xargs echo)"
echo ": ${inputs} |> !javac |> $(generated | xargs echo)"
